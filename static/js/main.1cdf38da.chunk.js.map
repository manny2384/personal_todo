{"version":3,"sources":["TodoList.js","CreateItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","console","log","map","item","index","onClick","className","style","padding","margin","type","value","onDelete","CreateItem","_","id","min","max","toggleOpen","App","state","show_form","new_item","list","handleSubmit","bind","handleChange","handleDelete","clearStorage","localStorage","getItem","this","setState","JSON","parse","setItem","stringify","document","querySelector","err","event","target","preventDefault","itemName","itemDate","concat","idx","i","length","splice","clear","height","todo","onSubmit","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1cdf38da.chunk.js","sourcesContent":["function TodoList(props){\n\n    console.log(props);\n  \n    if(!props['todo']){\n      console.log(\"nothing to return\");\n      return null;\n    }\n  \n    else \n    {  \n      const returner = props['todo'].map((item, index)=>{\n        return <li onClick={()=>{\n\n        }} className=\"TodoListItem\" key={index+1}> \n                <div> {item[0]} </div> \n                <div> Due: {item[1]} </div>\n                <button style={{padding:\"5px\", margin:\"5px\"}} type=\"submit\" value={item[0]} onClick={props.onDelete}> Remove </button>\n        </li>\n      });\n  \n      return returner;\n    }\n    \n  \n}\n\nexport default TodoList;","function CreateItem(props){\n\n    return <div className=\"New_item_style\">\n        <div className=\"New_item_labels\"_>\n            <label> Item Name: <input id=\"New_Item\" /> </label>\n            <label> Due Date: <input type=\"date\" min=\"2021-10-30\" max=\"2030-10-30\" id=\"Duedate\" /> </label>\n        </div>\n        <div className=\"New_item_btns\">\n            <input type=\"submit\" value=\"Add Item\" />\n            <input type=\"button\" value=\"Cancel\" onClick={props.toggleOpen} />\n        </div>\n    </div>;\n\n\n}\n\nexport default CreateItem;","import React from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport CreateItem from './CreateItem';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      show_form: false,\n      new_item:\"\",\n\n      list:[]\n\n    }\n\n    // helper functionS\n    this.handleSubmit = this.handleSubmit.bind(this); // handles submission of new item\n    this.handleChange = this.handleChange.bind(this); // handles name modification of new item\n    this.handleDelete = this.handleDelete.bind(this); // handles deletion of an existing item\n    this.clearStorage = this.clearStorage.bind(this); // clears all todo items in local storage\n    this.toggleOpen = this.toggleOpen.bind(this); // handles whether form to create item is opened or not\n  }\n\n  componentDidMount(){\n\n    // try to retrieve localstorage todo items\n    if(localStorage.getItem(\"my_todo\")){\n\n      this.setState({list: JSON.parse(localStorage.getItem(\"my_todo\"))});\n      console.log(JSON.parse(localStorage.getItem(\"my_todo\")));\n\n    }else{\n\n      console.log(\"nothing in local storage\\n\");\n      console.log(this.state.list);\n\n    }\n  \n  }\n\n  componentDidUpdate(){\n\n    // sort based on item name\n\n\n    // add list of items to local storage before closing\n    try{\n      localStorage.setItem(\"my_todo\", JSON.stringify(this.state.list));\n      console.log(JSON.parse(localStorage.getItem(\"my_todo\")));\n      document.querySelector(\"#New_Item\").value = \"\";\n      document.querySelector(\"#Duedate\").value = \"\";\n    }catch(err){\n      console.log(\"Error in component did update\", err);\n    }\n\n  }\n\n  handleChange(event){\n\n    // update new item name\n    this.setState({\n      new_item: event.target.value\n    });\n\n    \n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n\n    // check if empty item\n    var itemName = document.querySelector(\"#New_Item\").value;\n    var itemDate = document.querySelector(\"#Duedate\").value;\n    if(itemName === null || itemName === \"\") return;\n\n    // add new item to list of items\n    this.setState((state, props) => {\n      return {\n        list: state.list.concat([[itemName, itemDate]]),\n        show_form: !state.show_form\n      }\n    });\n\n    event.preventDefault();\n  }\n  \n  handleDelete(event){\n    console.log(\"clicked delete \", event.target.value);\n\n    // check if item exists by returning index\n    var idx, i = 0;\n    \n    while(this.state.list[i][0] !== event.target.value && i < this.state.list.length){\n      console.log(i, this.state.list[i][0]);\n      i++;\n    }\n\n    idx = i;\n    if(idx > this.state.list.length - 1) return;\n\n    // delete index item from list\n    console.log(\"deleting index \", idx);\n    this.state.list.splice(idx, 1);\n    this.setState(state => {\n      return {\n        list: state.list\n      }\n    })\n\n  }\n\n  clearStorage(){\n\n    this.setState({list: []});\n    localStorage.clear();\n\n  }\n\n  toggleOpen(){\n    this.setState({show_form: !this.state.show_form})\n  }\n\n\n\n  render (){\n\n    return(   \n      <div style={{height:\"100%\"}}>\n        <div className=\"App\">\n        \n          <ul className=\"TodoList\"> \n            <TodoList todo={this.state.list} onDelete={this.handleDelete} />\n          </ul>\n          \n          <div className=\"main_btns\">\n            <input type=\"button\" value=\"ADD ITEM\" onClick={this.toggleOpen} />\n            \n            <button onClick={this.clearStorage} type=\"submit\"> CLEAR ALL </button>\n          </div>\n        </div>\n\n        {this.state.show_form && \n          <form className=\"New_item_form\" onSubmit={this.handleSubmit}>\n            <CreateItem toggleOpen={this.toggleOpen} />\n          </form>\n        }\n\n     </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}