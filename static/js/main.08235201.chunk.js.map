{"version":3,"sources":["TodoList.js","CreateItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","console","log","map","item","index","onClick","className","style","padding","margin","type","value","onDelete","CreateItem","today","Date","getDate","getMonth","getFullYear","day","month","year","_","id","min","max","toggleOpen","App","state","show_form","new_item","list","handleSubmit","bind","handleChange","handleDelete","clearStorage","localStorage","getItem","JSON","parse","arr","sort","x","y","this","setState","setItem","stringify","document","querySelector","err","event","target","preventDefault","itemName","itemDate","concat","idx","i","length","splice","clear","height","todo","edit","onSubmit","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08235201.chunk.js","sourcesContent":["\n\nfunction TodoList(props){\n\n    console.log(props);\n  \n    if(!props['todo']){\n      console.log(\"nothing to return\");\n      return null;\n    }\n  \n    else \n    {  \n      const returner = props['todo'].map((item, index)=>{\n        return <li onClick={()=>{\n          // props.edit();\n        }} className=\"TodoListItem\" key={index+1}> \n                <div> {item[0]} </div> \n                <div> Due: {item[1]} </div>\n                <button style={{padding:\"5px\", margin:\"5px\"}} type=\"submit\" value={item[0]} onClick={props.onDelete}> Remove </button>\n        </li>\n      });\n  \n      return returner;\n    }\n    \n  \n}\n\nexport default TodoList;","function CreateItem(props){\n\n    let today = new Date();\n    console.log(today.getDate(), today.getMonth(), today.getFullYear());\n    let day = today.getDate();\n    let month = today.getMonth()+1;\n    let year = today.getFullYear();\n\n    if(day < 10) day = '0' + day;\n    if(month < 10) month = '0' + month;\n    \n\n    return <div className=\"New_item_style\">\n        <div className=\"New_item_labels\"_>\n            <label> Item Name: <input id=\"New_Item\" /> </label>\n            <label> Due Date: <input id=\"Duedate\" type=\"date\" min={year + '-' + month + '-' + day} max=\"2030-10-30\" /> </label>\n        </div>\n        <div className=\"New_item_btns\">\n            <input type=\"submit\" value=\"Add Item\" />\n            <input type=\"button\" value=\"Cancel\" onClick={props.toggleOpen} />\n        </div>\n    </div>;\n\n\n}\n\nexport default CreateItem;","import React from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport CreateItem from './CreateItem';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      show_form: false,\n      new_item:\"\",\n\n      list:[]\n\n    }\n\n    // helper functionS\n    this.handleSubmit = this.handleSubmit.bind(this); // handles submission of new item\n    this.handleChange = this.handleChange.bind(this); // handles name modification of new item\n    this.handleDelete = this.handleDelete.bind(this); // handles deletion of an existing item\n    this.clearStorage = this.clearStorage.bind(this); // clears all todo items in local storage\n    this.toggleOpen = this.toggleOpen.bind(this); // handles whether form to create item is opened or not\n  }\n\n  componentDidMount(){\n\n    // try to retrieve localstorage todo items\n    if(localStorage.getItem(\"my_todo\") && JSON.parse(localStorage.getItem(\"my_todo\")) != null){\n      let arr = JSON.parse(localStorage.getItem(\"my_todo\"));\n\n      console.log(\"my_todo array = \", arr);\n\n      // sort list\n      arr = arr.sort((x, y) => {\n        if(x[1] < y[1]) return -1;\n        else if(x[1] < y[1]) return 1;\n        else return 0;\n      });\n\n\n      this.setState({list: arr});\n      \n      console.log(JSON.parse(localStorage.getItem(\"my_todo\")));\n\n    }else{\n\n      console.log(\"nothing in local storage\\n\");\n      console.log(this.state.list);\n\n    }\n  \n  }\n\n  componentDidUpdate(){\n\n    // sort based on item name\n\n\n    // add list of items to local storage before closing\n    try{\n      localStorage.setItem(\"my_todo\", JSON.stringify(this.state.list));\n      console.log(JSON.parse(localStorage.getItem(\"my_todo\")));\n      document.querySelector(\"#New_Item\").value = \"\";\n      document.querySelector(\"#Duedate\").value = \"\";\n    }catch(err){\n      console.log(\"Error in component did update\", err);\n    }\n\n  }\n\n  handleChange(event){\n\n    // update new item name\n    this.setState({\n      new_item: event.target.value\n    });\n\n    \n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n\n    // check if empty item\n    var itemName = document.querySelector(\"#New_Item\").value;\n    var itemDate = document.querySelector(\"#Duedate\").value;\n    if(itemName === null || itemName === \"\") return;\n\n    // add new item to list of items\n    this.setState((state, props) => {\n      return {\n        list: state.list.concat([[itemName, itemDate]]).sort((x, y) => {\n          if(x[1] < y[1]) return -1;\n          else if(x[1] < y[1]) return 1;\n          else return 0;\n        }),\n        show_form: !state.show_form\n      }\n    });\n\n    event.preventDefault();\n  }\n  \n  handleDelete(event){\n    console.log(\"clicked delete \", event.target.value);\n\n    // check if item exists by returning index\n    var idx, i = 0;\n    \n    while(this.state.list[i][0] !== event.target.value && i < this.state.list.length){\n      console.log(i, this.state.list[i][0]);\n      i++;\n    }\n\n    idx = i;\n    if(idx > this.state.list.length - 1) return;\n\n    // delete index item from list\n    console.log(\"deleting index \", idx);\n    this.state.list.splice(idx, 1);\n    this.setState(state => {\n      return {\n        list: state.list\n      }\n    })\n\n  }\n\n  clearStorage(){\n\n    this.setState({list: []});\n    localStorage.clear();\n\n  }\n\n  toggleOpen(){\n    this.setState({show_form: !this.state.show_form})\n  }\n\n\n\n  render (){\n\n    return(   \n      <div style={{height:\"100%\"}}>\n        <div className=\"App\">\n        \n          <ul className=\"TodoList\"> \n            <TodoList todo={this.state.list} edit={this.toggleOpen} onDelete={this.handleDelete} />\n          </ul>\n          \n          <div className=\"main_btns\">\n            <input type=\"button\" value=\"ADD ITEM\" onClick={this.toggleOpen} />\n            \n          </div>\n        </div>\n\n        {this.state.show_form && \n          <form className=\"New_item_form\" onSubmit={this.handleSubmit}>\n            <CreateItem toggleOpen={this.toggleOpen} />\n          </form>\n        }\n\n     </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}